// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public"]
}

// Productivia

model Fsm {
  id                           String               @id @default(cuid())
  workbookId                   String               @map("workbook_id")
  workbook                     Workbook             @relation(fields: [workbookId], references: [id])
  name                         String
  description                  String?
  created                      DateTime             @default(now())
  updated                      DateTime             @updatedAt

  ofFsmActiveState             FsmActiveState[]
  ofFsmState                   FsmState[]
  ofFsmTransitions             FsmTransition[]

  @@unique([workbookId, name])
  @@map("fsm")
  @@schema("public")
}

model FsmActiveState {
  id                           String               @id @default(cuid())
  fsmId                        String               @map("fsm_id")
  fsm                          Fsm                  @relation(fields: [fsmId], references: [id])
  fsmStateId                   String               @map("fsm_state_id")
  fsmState                     FsmState             @relation(fields: [fsmStateId], references: [id])
  description                  String?
  created                      DateTime             @default(now())
  updated                      DateTime             @updatedAt

  @@unique([fsmId, fsmStateId])
  @@map("fsm_active_state")
  @@schema("public")
}

model FsmState {
  id                           String               @id @default(cuid())
  fsmId                        String               @map("fsm_id")
  fsm                          Fsm                  @relation(fields: [fsmId], references: [id])
  name                         String
  description                  String?
  created                      DateTime             @default(now())
  updated                      DateTime             @updatedAt

  ofFsmActiveState             FsmActiveState[]
  ofFsmTransitionFroms         FsmTransition[]      @relation("from_state")
  ofFsmTransitionTos           FsmTransition[]      @relation("to_state")

  @@unique([fsmId, name])
  @@map("fsm_state")
  @@schema("public")
}

model FsmTransition {
  id                           String               @id @default(cuid())
  fsmId                        String               @map("fsm_id")
  fsm                          Fsm                  @relation(fields: [fsmId], references: [id])
  fromFsmStateId               String               @map("from_state_id")
  fromFsmState                 FsmState             @relation("from_state", fields: [fromFsmStateId], references: [id])
  toFsmStateId                 String               @map("to_state_id")
  toFsmState                   FsmState             @relation("to_state", fields: [toFsmStateId], references: [id])
  name                         String
  description                  String?
  created                      DateTime             @default(now())
  updated                      DateTime             @updatedAt

  @@unique([fsmId, name])
  @@map("fsm_transition")
  @@schema("public")
}

model Workbook {
  id                           String               @id @default(cuid())
  created                      DateTime             @default(now())
  updated                      DateTime             @updatedAt

  ofFsms                       Fsm[]

  @@map("workbook")
  @@schema("public")
}
